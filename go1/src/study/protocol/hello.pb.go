// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

//指定包名

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//请求结构类型
type ReqHello struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int32    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqHello) Reset()         { *m = ReqHello{} }
func (m *ReqHello) String() string { return proto.CompactTextString(m) }
func (*ReqHello) ProtoMessage()    {}
func (*ReqHello) Descriptor() ([]byte, []int) {
	return fileDescriptor_61ef911816e0a8ce, []int{0}
}

func (m *ReqHello) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqHello.Unmarshal(m, b)
}
func (m *ReqHello) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqHello.Marshal(b, m, deterministic)
}
func (m *ReqHello) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqHello.Merge(m, src)
}
func (m *ReqHello) XXX_Size() int {
	return xxx_messageInfo_ReqHello.Size(m)
}
func (m *ReqHello) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqHello.DiscardUnknown(m)
}

var xxx_messageInfo_ReqHello proto.InternalMessageInfo

func (m *ReqHello) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReqHello) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

//返回结构类型
type RespHello struct {
	Hi                   string   `protobuf:"bytes,1,opt,name=hi,proto3" json:"hi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespHello) Reset()         { *m = RespHello{} }
func (m *RespHello) String() string { return proto.CompactTextString(m) }
func (*RespHello) ProtoMessage()    {}
func (*RespHello) Descriptor() ([]byte, []int) {
	return fileDescriptor_61ef911816e0a8ce, []int{1}
}

func (m *RespHello) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespHello.Unmarshal(m, b)
}
func (m *RespHello) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespHello.Marshal(b, m, deterministic)
}
func (m *RespHello) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespHello.Merge(m, src)
}
func (m *RespHello) XXX_Size() int {
	return xxx_messageInfo_RespHello.Size(m)
}
func (m *RespHello) XXX_DiscardUnknown() {
	xxx_messageInfo_RespHello.DiscardUnknown(m)
}

var xxx_messageInfo_RespHello proto.InternalMessageInfo

func (m *RespHello) GetHi() string {
	if m != nil {
		return m.Hi
	}
	return ""
}

func init() {
	proto.RegisterType((*ReqHello)(nil), "protocol.ReqHello")
	proto.RegisterType((*RespHello)(nil), "protocol.RespHello")
}

func init() { proto.RegisterFile("hello.proto", fileDescriptor_61ef911816e0a8ce) }

var fileDescriptor_61ef911816e0a8ce = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x48, 0xcd, 0xc9,
	0xc9, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0xc9, 0xf9, 0x39, 0x4a, 0x06,
	0x5c, 0x1c, 0x41, 0xa9, 0x85, 0x1e, 0x20, 0x39, 0x21, 0x21, 0x2e, 0x96, 0xbc, 0xc4, 0xdc, 0x54,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0x5b, 0x48, 0x80, 0x8b, 0x39, 0x31, 0x3d, 0x55,
	0x82, 0x49, 0x81, 0x51, 0x83, 0x35, 0x08, 0xc4, 0x54, 0x92, 0xe6, 0xe2, 0x0c, 0x4a, 0x2d, 0x2e,
	0x80, 0x68, 0xe1, 0xe3, 0x62, 0xca, 0xc8, 0x84, 0x6a, 0x60, 0xca, 0xc8, 0x34, 0x32, 0xe7, 0x62,
	0x71, 0x49, 0xcd, 0xcd, 0x17, 0xd2, 0xe7, 0x62, 0xf2, 0xc8, 0x14, 0x12, 0xd2, 0x83, 0xd9, 0xa3,
	0x07, 0xb3, 0x44, 0x4a, 0x18, 0x59, 0x0c, 0x6a, 0x8c, 0x12, 0x43, 0x12, 0x1b, 0x58, 0xd4, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x85, 0x37, 0x99, 0x02, 0xa7, 0x00, 0x00, 0x00,
}
